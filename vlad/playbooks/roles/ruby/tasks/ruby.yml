---
- name: ensure prerequisite packages are installed
  yum: pkg={{ item }} state=installed
  sudo: true
  with_items:
    - openssl-devel
    - readline-devel
    - zlib-devel
  when: ansible_os_family == "RedHat"

- name: install rbenv
  git: repo=https://github.com/sstephenson/rbenv.git
       dest=/home/{{ user }}/.rbenv

- name: install rbenv plugins
  git: repo=https://github.com/sstephenson/{{ item }}.git
       dest=/home/{{ user }}/.rbenv/plugins/{{ item }}
  with_items:
    - 'rbenv-gem-rehash'
    - 'rbenv-gemset'
    - 'ruby-build'

- name: add line to .bash_profile (rbenv) (step 1/4)
  lineinfile: dest=/home/{{ user }}/.bash_profile
              line='# rbenv'
              create=yes

- name: add line to .bash_profile (rbenv) (step 2/4)
  lineinfile: dest=/home/{{ user }}/.bash_profile line='export PATH="$HOME/.rbenv/bin:$PATH"'

- name: add line to .bash_profile (rbenv) (step 3/4)
  lineinfile: dest=/home/{{ user }}/.bash_profile line='eval "$(rbenv init -)"'

- name: ensure .bashrc gets loaded as well (rbenv) (step 4/4)
  lineinfile: dest=/home/{{ user }}/.bash_profile line='[ -f $HOME/.bashrc ] && . $HOME/.bashrc'

# rbenv won't be available until we source ~/.bash_profile
- name: source ~/.bash_profile
  command: . /home/{{ user }}/.bash_profile executable=/bin/bash

# debugging
#- command: bash -lc "type rbenv"

# The command module gets a fair bit of use below as we need to tell bash to run the command
# as if we were in a login shell (to make sure rbenv kicks in when required).

- name: install Ruby {{ default_ruby_version }}
  command: bash -lc "rbenv install {{ default_ruby_version }}"
           creates=/home/{{ user }}/.rbenv/versions/{{ default_ruby_version }}
           executable=/bin/bash

# TODO: Make idempotent
- name: set the global version of Ruby to {{ default_ruby_version }}
  command: bash -lc "rbenv global {{ default_ruby_version }} && rbenv rehash"

# debugging
#- command: bash -lc "ruby --version"

# TODO: Make idempotent
- name: update RubyGems
  command: bash -lc "gem update --system"

# TODO: Make gem installations via rbenv idempotent
# Can't use "creates" as the gem version number can change and "creates" doesn't support wildcards :(
- name: install Bundler gem to global Ruby version
  command: bash -lc "gem install bundler"