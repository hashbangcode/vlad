---
- name: install mysql packages
  apt: pkg={{ item }} state=installed
  sudo: true
  with_items:    
   - mysql-client
   - mysql-common
   - mysql-server
   - python-mysqldb

# set up mysql variables
- name: create MySQL configuration file
  action: template src=mysql.my.cnf.j2 dest=/etc/my.cnf
  sudo: true
  notify: 
  - restart mysql

- name: change main settings for skip-external-locking
  lineinfile: dest=/etc/mysql/my.cnf regexp="^#?skip-external-locking" insertafter="skip-external-locking" line="#skip-external-locking"
  sudo: true
  notify:
    - restart mysql

- name: change main settings for bind-address
  lineinfile: dest=/etc/mysql/my.cnf regexp="^#?bind-address" insertafter="bind-address" line="#bind-address"
  sudo: true
  notify:
    - restart mysql

- name: get iptables rules
  shell: iptables -L
  register: iptablesrules
  failed_when: "iptablesrules.rc != 0"
  changed_when: False
  always_run: yes
  sudo: true

- name: add mysql to iptables
  command: iptables -A INPUT -p tcp --dport {{ mysql_port }} -j  ACCEPT  -m comment --comment "mysql"
  sudo: true
  when: iptablesrules.stdout.find("mysql") == -1
  notify:
   - save iptables

# MySQL database setup, this does the equivalent of mysql_secure_installation.
- name: Set the root password.
  mysql_user: login_user=root login_password={{ mysql_root_password }} check_implicit_admin=true name=root password={{ mysql_root_password }} priv=*.*:ALL,GRANT

- name: Config for easy access as root user
  template: src=mysql_root.my.cnf.j2 dest=/root/.my.cnf
  when: "'{{ user }}' == 'root'"

- name: Config for easy access as root user
  template: src=mysql_root.my.cnf.j2 dest=/home/{{ user }}/.my.cnf
  when: "'{{ user }}' != 'root'"

- name: Delete anonymous MySQL server user for {{ server_hostname }}
  mysql_user: name="" host="{{ server_hostname }}" state="absent" login_user=root login_password={{ mysql_root_password }}

- name: Delete anonymous MySQL server user for localhost
  mysql_user: name="" state="absent" host="{{ server_hostname }}" login_user="root" login_password="{{ mysql_root_password }}"

- name: Secure the MySQL root user for IPV6 localhost (::1)
  mysql_user: name="root" password="{{ mysql_root_password }}" host="{{ server_hostname }}" login_user=root login_password={{ mysql_root_password }}

- name: Secure the MySQL root user for IPV4 localhost (127.0.0.1)
  mysql_user: name="root" password="{{ mysql_root_password }}" host="{{ server_hostname }}" login_user=root login_password={{ mysql_root_password }}

- name: Secure the MySQL root user for localhost domain (localhost)
  mysql_user: name="root" password="{{ mysql_root_password }}" host="{{ server_hostname }}" login_user=root login_password={{ mysql_root_password }}

- name: Secure the MySQL root user for {{ server_hostname }} domain
  mysql_user: name="root" password="{{ mysql_root_password }}" host="{{ server_hostname }}" login_user=root login_password={{ mysql_root_password }}

- name: Remove the MySQL test database
  mysql_db: db=test state=absent login_user=root login_password={{ mysql_root_password }}
  
# set up default database
- name: create application database
  mysql_db: name={{ dbname }} state=present login_password={{ mysql_root_password }} login_user=root

- name: create application database user
  mysql_user: name={{ dbuser }} password={{ dbpass }} priv=*.*:ALL host='%' state=present login_password={{ mysql_root_password }} login_user=root

- name: import database
  mysql_db: name={{ dbname }} state=import target=/var/www/site/vlad_aux/db_io/vlad_up.sql.gz login_password={{ mysql_root_password }} login_user=root
  when: db_import_up is defined and db_import_up == "y"
  ignore_errors: yes