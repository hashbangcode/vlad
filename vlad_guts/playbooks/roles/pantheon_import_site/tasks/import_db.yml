---

# If the user halted or restarted the VM before running provisioning,
# Vlad itself will have overwritten vladdb.sql.gz.
# Move it to a separate location instead of deleting it outright.
- name: db | Check for existing vladdb.sql.gz
  stat: path=/var/www/site/vlad_aux/db_io/halt_destroy/vladdb.sql.gz
  register: vlad_pantheon_import_site_evdb
  ignore_errors: true

- name: db | Back up existing vladdb.sql.gz
  command: mv -f /var/www/site/vlad_aux/db_io/halt_destroy/vladdb.sql.gz /var/www/site/vlad_aux/db_io/halt_destroy/vladdb_pantheon_import_site_backup.sql.gz
  when: vlad_pantheon_import_site_evdb is defined and vlad_pantheon_import_site_evdb.stat.exists == True

- name: db | Download latest database backup from Pantheon
  command: terminus site backups get --site="{{ vlad_pantheon_import_site_site }}" --env="{{ vlad_pantheon_import_site_env }}" --element=db --latest --to=/var/www/site/vlad_aux/db_io/halt_destroy/pantheon_import_site.sql.gz
  args:
    creates: /var/www/site/vlad_aux/db_io/halt_destroy/pantheon_import_site.sql.gz

- name: db | Copy downloaded database to vladdb.sql.gz so mysql role will import it
  command: cp /var/www/site/vlad_aux/db_io/halt_destroy/pantheon_import_site.sql.gz /var/www/site/vlad_aux/db_io/halt_destroy/vladdb.sql.gz
  args:
    creates: /var/www/site/vlad_aux/db_io/halt_destroy/vladdb.sql.gz

# If we already have MySQL from a previous run, then clear the DB so that the new backup will get imported later.
- name: db | Check if mysql works
  stat: path=/usr/bin/mysql
  ignore_errors: true
  register: vlad_pantheon_import_site_haz_mysql

- name: db | Drop vladdb database
  mysql_db: name=vladdb state=absent login_user='{{ dbuser }}' login_password='{{ dbpass }}'
  sudo: yes
  when: vlad_pantheon_import_site_haz_mysql.stat.exists is defined and vlad_pantheon_import_site_haz_mysql.stat.exists == True
